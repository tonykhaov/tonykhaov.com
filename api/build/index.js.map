{
  "version": 3,
  "sources": ["<stdin>", "../../node_modules/@remix-run/dev/compiler/shims/react.ts", "../../app/entry.server.tsx", "route-module:/Users/tonykhaov/Downloads/tonykhaov.com/app/root.tsx", "../../app/components/Footer.tsx", "../../app/components/Header.tsx", "../../app/components/Layout.tsx", "../../app/components/RouteChangeAnnouncement.tsx", "route-module:/Users/tonykhaov/Downloads/tonykhaov.com/app/routes/demos/actions.tsx", "route-module:/Users/tonykhaov/Downloads/tonykhaov.com/app/routes/demos/correct.tsx", "route-module:/Users/tonykhaov/Downloads/tonykhaov.com/app/routes/demos/params.tsx", "route-module:/Users/tonykhaov/Downloads/tonykhaov.com/app/routes/demos/params/index.tsx", "route-module:/Users/tonykhaov/Downloads/tonykhaov.com/app/routes/demos/params/$id.tsx", "route-module:/Users/tonykhaov/Downloads/tonykhaov.com/app/routes/cours/index.tsx", "route-module:/Users/tonykhaov/Downloads/tonykhaov.com/app/routes/demos/about.tsx", "route-module:/Users/tonykhaov/Downloads/tonykhaov.com/app/routes/demos/about/index.tsx", "route-module:/Users/tonykhaov/Downloads/tonykhaov.com/app/routes/demos/about/whoa.tsx", "route-module:/Users/tonykhaov/Downloads/tonykhaov.com/app/routes/about.tsx", "route-module:/Users/tonykhaov/Downloads/tonykhaov.com/app/routes/index.tsx"],
  "sourcesContent": ["\nimport * as entryServer from \"/Users/tonykhaov/Downloads/tonykhaov.com/app/entry.server.tsx\";\nimport * as route0 from \"/Users/tonykhaov/Downloads/tonykhaov.com/app/root.tsx\";\nimport * as route1 from \"/Users/tonykhaov/Downloads/tonykhaov.com/app/routes/demos/actions.tsx\";\nimport * as route2 from \"/Users/tonykhaov/Downloads/tonykhaov.com/app/routes/demos/correct.tsx\";\nimport * as route3 from \"/Users/tonykhaov/Downloads/tonykhaov.com/app/routes/demos/params.tsx\";\nimport * as route4 from \"/Users/tonykhaov/Downloads/tonykhaov.com/app/routes/demos/params/index.tsx\";\nimport * as route5 from \"/Users/tonykhaov/Downloads/tonykhaov.com/app/routes/demos/params/$id.tsx\";\nimport * as route6 from \"/Users/tonykhaov/Downloads/tonykhaov.com/app/routes/cours/index.tsx\";\nimport * as route7 from \"/Users/tonykhaov/Downloads/tonykhaov.com/app/routes/demos/about.tsx\";\nimport * as route8 from \"/Users/tonykhaov/Downloads/tonykhaov.com/app/routes/demos/about/index.tsx\";\nimport * as route9 from \"/Users/tonykhaov/Downloads/tonykhaov.com/app/routes/demos/about/whoa.tsx\";\nimport * as route10 from \"/Users/tonykhaov/Downloads/tonykhaov.com/app/routes/about.tsx\";\nimport * as route11 from \"/Users/tonykhaov/Downloads/tonykhaov.com/app/routes/index.tsx\";\nexport { default as assets } from \"./assets.json\";\nexport const entry = { module: entryServer };\nexport const routes = {\n  \"root\": {\n    id: \"root\",\n    parentId: undefined,\n    path: \"\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route0\n  },\n  \"routes/demos/actions\": {\n    id: \"routes/demos/actions\",\n    parentId: \"root\",\n    path: \"demos/actions\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route1\n  },\n  \"routes/demos/correct\": {\n    id: \"routes/demos/correct\",\n    parentId: \"root\",\n    path: \"demos/correct\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route2\n  },\n  \"routes/demos/params\": {\n    id: \"routes/demos/params\",\n    parentId: \"root\",\n    path: \"demos/params\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route3\n  },\n  \"routes/demos/params/index\": {\n    id: \"routes/demos/params/index\",\n    parentId: \"routes/demos/params\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route4\n  },\n  \"routes/demos/params/$id\": {\n    id: \"routes/demos/params/$id\",\n    parentId: \"routes/demos/params\",\n    path: \":id\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route5\n  },\n  \"routes/cours/index\": {\n    id: \"routes/cours/index\",\n    parentId: \"root\",\n    path: \"cours\",\n    index: true,\n    caseSensitive: undefined,\n    module: route6\n  },\n  \"routes/demos/about\": {\n    id: \"routes/demos/about\",\n    parentId: \"root\",\n    path: \"demos/about\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route7\n  },\n  \"routes/demos/about/index\": {\n    id: \"routes/demos/about/index\",\n    parentId: \"routes/demos/about\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route8\n  },\n  \"routes/demos/about/whoa\": {\n    id: \"routes/demos/about/whoa\",\n    parentId: \"routes/demos/about\",\n    path: \"whoa\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route9\n  },\n  \"routes/about\": {\n    id: \"routes/about\",\n    parentId: \"root\",\n    path: \"about\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route10\n  },\n  \"routes/index\": {\n    id: \"routes/index\",\n    parentId: \"root\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route11\n  }\n};", "import * as React from \"react\";\nexport { React };\n", "import { renderToString } from \"react-dom/server\";\nimport { RemixServer } from \"remix\";\nimport type { EntryContext } from \"remix\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders\n  });\n}\n", "import * as React from 'react'\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n} from 'remix'\nimport type { LinksFunction } from 'remix'\n\nimport temporaryStylesUrl from '~/styles/temporary.css'\nimport { Layout, RouteChangeAnnouncement } from '~/components'\n\nexport let links: LinksFunction = () => {\n  return [{ rel: 'stylesheet', href: temporaryStylesUrl }]\n}\n\nexport default function App() {\n  return (\n    <Document>\n      <Layout>\n        <Outlet />\n      </Layout>\n    </Document>\n  )\n}\n\nfunction Document({\n  children,\n  title,\n}: {\n  children: React.ReactNode\n  title?: string\n}) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        {title ? <title>{title}</title> : null}\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        {children}\n        <RouteChangeAnnouncement />\n        <ScrollRestoration />\n        <Scripts />\n        {process.env.NODE_ENV === 'development' && <LiveReload />}\n      </body>\n    </html>\n  )\n}\n\nexport function CatchBoundary() {\n  let caught = useCatch()\n\n  let message\n  switch (caught.status) {\n    case 401:\n      message = (\n        <p>\n          Oops! Looks like you tried to visit a page that you do not have access\n          to.\n        </p>\n      )\n      break\n    case 404:\n      message = (\n        <p>Oops! Looks like you tried to visit a page that does not exist.</p>\n      )\n      break\n\n    default:\n      throw new Error(caught.data || caught.statusText)\n  }\n\n  return (\n    <Document title={`${caught.status} ${caught.statusText}`}>\n      <Layout>\n        <h1>\n          {caught.status}: {caught.statusText}\n        </h1>\n        {message}\n      </Layout>\n    </Document>\n  )\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error)\n  return (\n    <Document title=\"Error!\">\n      <Layout>\n        <div>\n          <h1>There was an error</h1>\n          <p>{error.message}</p>\n          <hr />\n          <p>\n            Hey, developer, you should replace this with what you want your\n            users to see.\n          </p>\n        </div>\n      </Layout>\n    </Document>\n  )\n}\n", "import { FaGithub, FaTwitter } from 'react-icons/fa'\n\nfunction Footer() {\n  return (\n    <footer style={{ display: 'flex', justifyContent: 'center' }}>\n      <a\n        title=\"Instagram\"\n        href=\"https://github.com/tonykhaov\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <FaGithub />\n      </a>\n      <a\n        title=\"Twitter\"\n        href=\"https://twitter.com/tonykhaov\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <FaTwitter />\n      </a>\n    </footer>\n  )\n}\n\nexport default Footer\n", "import { Link } from 'remix'\n\nfunction Header() {\n  return (\n    <header>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <div style={{ display: 'flex' }}>\n          <Link to=\"/\" title=\"Photo of Tony Khaov\">\n            <div\n              style={{\n                width: '3rem',\n                height: '3rem',\n                borderRadius: '100%',\n                backgroundColor: 'green',\n              }}\n            />\n          </Link>\n          <div>\n            <h1>\n              <Link to=\"/\" title=\"Tony Khaov\">\n                Tony Khaov\n              </Link>\n            </h1>\n            <p>Front End Developer</p>\n          </div>\n        </div>\n        <nav aria-label=\"Main navigation\">\n          <ul style={{ display: 'flex' }}>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/cours\">Cours</Link>\n            </li>\n            <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </header>\n  )\n}\nexport default Header\n", "import { Footer, Header } from '~/components'\n\nfunction Layout({ children }: React.PropsWithChildren<{}>) {\n  return (\n    <div>\n      <Header />\n      <div>\n        <div>{children}</div>\n      </div>\n      <Footer />\n    </div>\n  )\n}\n\nexport default Layout\n", "import * as React from 'react'\nimport { useLocation } from 'remix'\n\nconst RouteChangeAnnouncement = React.memo(() => {\n  let [hydrated, setHydrated] = React.useState(false)\n  let [innerHtml, setInnerHtml] = React.useState('')\n  let location = useLocation()\n\n  React.useEffect(() => {\n    setHydrated(true)\n  }, [])\n\n  let firstRenderRef = React.useRef(true)\n  React.useEffect(() => {\n    // Skip the first render because we don't want an announcement on the\n    // initial page load.\n    if (firstRenderRef.current) {\n      firstRenderRef.current = false\n      return\n    }\n\n    let pageTitle = location.pathname === '/' ? 'Home page' : document.title\n    setInnerHtml(`Navigated to ${pageTitle}`)\n  }, [location.pathname])\n\n  // Render nothing on the server. The live region provides no value unless\n  // scripts are loaded and the browser takes over normal routing.\n  if (!hydrated) {\n    return null\n  }\n\n  return (\n    <div\n      aria-live=\"assertive\"\n      aria-atomic\n      id=\"route-change-region\"\n      style={{\n        border: '0',\n        clipPath: 'inset(100%)',\n        clip: 'rect(0 0 0 0)',\n        height: '1px',\n        margin: '-1px',\n        overflow: 'hidden',\n        padding: '0',\n        position: 'absolute',\n        width: '1px',\n        whiteSpace: 'nowrap',\n        wordWrap: 'normal',\n      }}\n    >\n      {innerHtml}\n    </div>\n  )\n})\nexport default RouteChangeAnnouncement\n", "import { useEffect, useRef } from \"react\";\nimport type { ActionFunction } from \"remix\";\nimport { Form, json, useActionData, redirect } from \"remix\";\n\nexport function meta() {\n  return { title: \"Actions Demo\" };\n}\n\n// When your form sends a POST, the action is called on the server.\n// - https://remix.run/api/conventions#action\n// - https://remix.run/guides/data-updates\nexport let action: ActionFunction = async ({ request }) => {\n  let formData = await request.formData();\n  let answer = formData.get(\"answer\");\n\n  // Typical action workflows start with validating the form data that just came\n  // over the network. Clientside validation is fine, but you definitely need it\n  // server side.  If there's a problem, return the the data and the component\n  // can render it.\n  if (typeof answer !== \"string\") {\n    return json(\"Come on, at least try!\", { status: 400 });\n  }\n\n  if (answer !== \"egg\") {\n    return json(`Sorry, ${answer} is not right.`, { status: 400 });\n  }\n\n  // Finally, if the data is valid, you'll typically write to a database or send or\n  // email or log the user in, etc. It's recommended to redirect after a\n  // successful action, even if it's to the same place so that non-JavaScript workflows\n  // from the browser doesn't repost the data if the user clicks back.\n  return redirect(\"/demos/correct\");\n};\n\nexport default function ActionsDemo() {\n  // https://remix.run/api/remix#useactiondata\n  let actionMessage = useActionData<string>();\n  let answerRef = useRef<HTMLInputElement>(null);\n\n  // This form works without JavaScript, but when we have JavaScript we can make\n  // the experience better by selecting the input on wrong answers! Go ahead, disable\n  // JavaScript in your browser and see what happens.\n  useEffect(() => {\n    if (actionMessage && answerRef.current) {\n      answerRef.current.select();\n    }\n  }, [actionMessage]);\n\n  return (\n    <div className=\"remix__page\">\n      <main>\n        <h2>Actions!</h2>\n        <p>\n          This form submission will send a post request that we handle in our\n          `action` export. Any route can export an action to handle data\n          mutations.\n        </p>\n        <Form method=\"post\" className=\"remix__form\">\n          <h3>Post an Action</h3>\n          <p>\n            <i>What is more useful when it is broken?</i>\n          </p>\n          <label>\n            <div>Answer:</div>\n            <input ref={answerRef} name=\"answer\" type=\"text\" />\n          </label>\n          <div>\n            <button>Answer!</button>\n          </div>\n          {actionMessage ? (\n            <p>\n              <b>{actionMessage}</b>\n            </p>\n          ) : null}\n        </Form>\n      </main>\n\n      <aside>\n        <h3>Additional Resources</h3>\n        <ul>\n          <li>\n            Guide:{\" \"}\n            <a href=\"https://remix.run/guides/data-writes\">Data Writes</a>\n          </li>\n          <li>\n            API:{\" \"}\n            <a href=\"https://remix.run/api/conventions#action\">\n              Route Action Export\n            </a>\n          </li>\n          <li>\n            API:{\" \"}\n            <a href=\"https://remix.run/api/remix#useactiondata\">\n              <code>useActionData</code>\n            </a>\n          </li>\n        </ul>\n      </aside>\n    </div>\n  );\n}\n", "export default function NiceWork() {\n  return <h1>You got it right!</h1>;\n}\n", "import { useCatch, Link, json, useLoaderData, Outlet } from \"remix\";\n\nexport function meta() {\n  return { title: \"Boundaries Demo\" };\n}\n\nexport default function Boundaries() {\n  return (\n    <div className=\"remix__page\">\n      <main>\n        <Outlet />\n      </main>\n\n      <aside>\n        <h2>Click these Links</h2>\n        <ul>\n          <li>\n            <Link to=\".\">Start over</Link>\n          </li>\n          <li>\n            <Link to=\"one\">\n              Param: <i>one</i>\n            </Link>\n          </li>\n          <li>\n            <Link to=\"two\">\n              Param: <i>two</i>\n            </Link>\n          </li>\n          <li>\n            <Link to=\"this-record-does-not-exist\">This will be a 404</Link>\n          </li>\n          <li>\n            <Link to=\"shh-its-a-secret\">And this will be 401 Unauthorized</Link>\n          </li>\n          <li>\n            <Link to=\"kaboom\">This one will throw an error</Link>\n          </li>\n        </ul>\n      </aside>\n    </div>\n  );\n}\n", "import { useCatch, Link, json, useLoaderData, Outlet } from \"remix\";\nimport type { LoaderFunction } from \"remix\";\n\nexport default function Boundaries() {\n  return (\n    <>\n      <h2>Params</h2>\n      <p>\n        When you name a route segment with $ like{\" \"}\n        <code>routes/users/$userId.js</code>, the $ segment will be parsed from\n        the URL and sent to your loaders and actions by the same name.\n      </p>\n      <h2>Errors</h2>\n      <p>\n        When a route throws and error in it's action, loader, or component,\n        Remix automatically catches it, won't even try to render the component,\n        but it will render the route's ErrorBoundary instead. If the route\n        doesn't have one, it will bubble up to the routes above it until it hits\n        the root.\n      </p>\n      <p>So be as granular as you want with your error handling.</p>\n      <h2>Not Found</h2>\n      <p>\n        (and other{\" \"}\n        <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#client_error_responses\">\n          client errors\n        </a>\n        )\n      </p>\n      <p>\n        Loaders and Actions can throw a <code>Response</code> instead of an\n        error and Remix will render the CatchBoundary instead of the component.\n        This is great when loading data from a database isn't found. As soon as\n        you know you can't render the component normally, throw a 404 response\n        and send your app into the catch boundary. Just like error boundaries,\n        catch boundaries bubble, too.\n      </p>\n    </>\n  );\n}\n", "import { useCatch, Link, json, useLoaderData } from \"remix\";\nimport type { LoaderFunction, MetaFunction } from \"remix\";\n\n// The `$` in route filenames becomes a pattern that's parsed from the URL and\n// passed to your loaders so you can look up data.\n// - https://remix.run/api/conventions#loader-params\nexport let loader: LoaderFunction = async ({ params }) => {\n  // pretend like we're using params.id to look something up in the db\n\n  if (params.id === \"this-record-does-not-exist\") {\n    // If the record doesn't exist we can't render the route normally, so\n    // instead we throw a 404 reponse to stop running code here and show the\n    // user the catch boundary.\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n\n  // now pretend like the record exists but the user just isn't authorized to\n  // see it.\n  if (params.id === \"shh-its-a-secret\") {\n    // Again, we can't render the component if the user isn't authorized. You\n    // can even put data in the response that might help the user rectify the\n    // issue! Like emailing the webmaster for access to the page. (Oh, right,\n    // `json` is just a Response helper that makes it easier to send JSON\n    // responses).\n    throw json({ webmasterEmail: \"hello@remix.run\" }, { status: 401 });\n  }\n\n  // Sometimes your code just blows up and you never anticipated it. Remix will\n  // automatically catch it and send the UI to the error boundary.\n  if (params.id === \"kaboom\") {\n    lol();\n  }\n\n  // but otherwise the record was found, user has access, so we can do whatever\n  // else we needed to in the loader and return the data. (This is boring, we're\n  // just gonna return the params.id).\n  return { param: params.id };\n};\n\nexport default function ParamDemo() {\n  let data = useLoaderData();\n  return (\n    <h1>\n      The param is <i style={{ color: \"red\" }}>{data.param}</i>\n    </h1>\n  );\n}\n\n// https://remix.run/api/conventions#catchboundary\n// https://remix.run/api/remix#usecatch\n// https://remix.run/api/guides/not-found\nexport function CatchBoundary() {\n  let caught = useCatch();\n\n  let message: React.ReactNode;\n  switch (caught.status) {\n    case 401:\n      message = (\n        <p>\n          Looks like you tried to visit a page that you do not have access to.\n          Maybe ask the webmaster ({caught.data.webmasterEmail}) for access.\n        </p>\n      );\n    case 404:\n      message = (\n        <p>Looks like you tried to visit a page that does not exist.</p>\n      );\n    default:\n      message = (\n        <p>\n          There was a problem with your request!\n          <br />\n          {caught.status} {caught.statusText}\n        </p>\n      );\n  }\n\n  return (\n    <>\n      <h2>Oops!</h2>\n      <p>{message}</p>\n      <p>\n        (Isn't it cool that the user gets to stay in context and try a different\n        link in the parts of the UI that didn't blow up?)\n      </p>\n    </>\n  );\n}\n\n// https://remix.run/api/conventions#errorboundary\n// https://remix.run/api/guides/not-found\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n  return (\n    <>\n      <h2>Error!</h2>\n      <p>{error.message}</p>\n      <p>\n        (Isn't it cool that the user gets to stay in context and try a different\n        link in the parts of the UI that didn't blow up?)\n      </p>\n    </>\n  );\n}\n\nexport let meta: MetaFunction = ({ data }) => {\n  return {\n    title: data ? `Param: ${data.param}` : \"Oops...\",\n  };\n};\n", "function CoursIndex() {\n  return <h1>Good</h1>\n}\n\nexport default CoursIndex\n", "import { Outlet } from \"remix\";\nimport type { MetaFunction, LinksFunction } from \"remix\";\n\nimport stylesUrl from \"~/styles/demos/about.css\";\n\nexport let meta: MetaFunction = () => {\n  return {\n    title: \"About Remix\"\n  };\n};\n\nexport let links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: stylesUrl }];\n};\n\nexport default function Index() {\n  return (\n    <div className=\"about\">\n      <div className=\"about__intro\">\n        <h2>About Us</h2>\n        <p>\n          Ok, so this page isn't really <em>about us</em>, but we did want to\n          show you a few more things Remix can do.\n        </p>\n        <p>\n          Did you notice that things look a little different on this page? The\n          CSS that we import in the route file and include in its{\" \"}\n          <code>links</code> export is only included on this route and its\n          children.\n        </p>\n        <p>\n          Wait a sec...<em>its children</em>? To understand what we mean by\n          this,{\" \"}\n          <a href=\"https://remix.run/tutorial/4-nested-routes-params\">\n            read all about nested routes in the docs\n          </a>\n          .\n        </p>\n        <hr />\n        <Outlet />\n      </div>\n    </div>\n  );\n}\n", "import { Link } from \"remix\";\n\nexport default function AboutIndex() {\n  return (\n    <div>\n      <p>\n        You are looking at the index route for the <code>/about</code> URL\n        segment, but there are nested routes as well!\n      </p>\n      <p>\n        <strong>\n          <Link to=\"whoa\">Check out one of them here.</Link>\n        </strong>\n      </p>\n    </div>\n  );\n}\n", "import { Link } from \"remix\";\n\nexport default function AboutIndex() {\n  return (\n    <div>\n      <p>\n        Whoa, this is a nested route! We render the <code>/about</code> layout\n        route component, and its <code>Outlet</code> renders our route\n        component. \uD83E\uDD2F\n      </p>\n      <p>\n        <strong>\n          <Link to=\"..\">\n            Go back to the <code>/about</code> index.\n          </Link>\n        </strong>\n      </p>\n    </div>\n  );\n}\n", "function About() {\n  return (\n    <div>\n      <h1>About me \uD83D\uDC68</h1>\n      <p>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatum ab\n        itaque deleniti similique omnis, blanditiis porro minus? Officia\n        molestiae nihil earum aperiam doloremque exercitationem nobis? Dolorem\n        magni ex alias atque quas, nesciunt officia laboriosam voluptate\n        repellat modi quia placeat maxime ab voluptates, repellendus minus dicta\n        veniam magnam, vitae voluptatibus doloremque asperiores sapiente dolorum\n        dignissimos? Beatae, saepe harum. Ipsa, facere vel?\n      </p>\n    </div>\n  )\n}\n\nexport default About\n", "import type { MetaFunction, LoaderFunction } from 'remix'\n\nexport let loader: LoaderFunction = () => {\n  return null\n}\n\n// https://remix.run/api/conventions#meta\nexport let meta: MetaFunction = () => {\n  return {\n    title: 'Homepage',\n    description: 'Welcome to my homepage!',\n  }\n}\n\n// https://remix.run/guides/routing#index-routes\nexport default function Index() {\n  return <h1>Hello</h1>\n}\n"],
  "mappings": "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",
  "names": []
}
